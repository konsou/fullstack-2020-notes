{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","request","axios","get","nonExisting","id","date","Date","toISOString","then","response","data","concat","newObject","post","put","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","notificationMessage","setNotificationMessage","useEffect","console","log","noteService","length","notesToShow","filter","map","key","find","changedNote","updatedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","target","noteObject","Math","random","value","onChange","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d340c39.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n    const label = note.important\r\n        ? 'make not important'\r\n        : 'make important'\r\n\r\n    return (\r\n        <li className=\"note\">\r\n            {note.content}\r\n            <button onClick={toggleImportance}>{label}</button>\r\n        </li>\r\n    )\r\n}\r\n  \r\n\r\nexport default Note","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null){ return null }\r\n\r\n    return (\r\n        <div className=\"notification\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    const footerStyle = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: 16\r\n    }\r\n\r\n    return (\r\n        <div style={footerStyle}>\r\n            <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import axios from 'axios'\r\n\r\n// const baseUrl = 'http://localhost:3001/api/notes'\r\n// const baseUrl = 'https://konso-notes.herokuapp.com/api/notes'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    const nonExisting = {\r\n        id: 999999999,\r\n        content: 'fake notes',\r\n        date: new Date().toISOString(),\r\n        important: true\r\n    }\r\n    return request.then(response => response.data.concat(nonExisting))\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update,\r\n}","import React, { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport Notification from './components/Notification'\r\nimport Footer from './components/Footer'\r\nimport noteService from './services/notes'\r\n\r\n\r\nconst App = (props) => {\r\n    const [ notes, setNotes ] = useState([])\r\n    const [ newNote, setNewNote ] = useState('new note text')\r\n    const [ showAll, setShowAll ] = useState(true)\r\n    const [ notificationMessage, setNotificationMessage ] = useState(null)\r\n\r\n\r\n    // This effect runs once, after the first render\r\n    useEffect(() => {\r\n      console.log('in effect')\r\n      noteService\r\n        .getAll()\r\n        .then(notes => {\r\n          console.log('notes fetched')\r\n          setNotes(notes)\r\n        })\r\n    }, [])\r\n\r\n    console.log('render', notes.length, 'notes')\r\n\r\n    const addNote = (event) => {\r\n      event.preventDefault()\r\n      console.log('button clicked', event.target)\r\n      console.log(newNote)\r\n\r\n      const noteObject = {\r\n        content: newNote,\r\n        date: new Date().toISOString(),\r\n        important: Math.random() > 0.5,\r\n      }\r\n\r\n      noteService\r\n        .create(noteObject)\r\n        .then(newNote => {\r\n          setNotes(notes.concat(newNote))\r\n          setNewNote('')\r\n        })\r\n    }\r\n\r\n    const toggleImportanceOf = (id) => {\r\n      console.log('importance of ' + id + ' needs to be changed')\r\n      const url = `http://localhost:3001/notes/${id}`\r\n      const note = notes.find(note => note.id === id)\r\n      const changedNote = { ...note, important: !note.important }\r\n      console.log('note after change: ', changedNote)\r\n\r\n      noteService\r\n        .update(id, changedNote)\r\n        .then(updatedNote =>{\r\n          setNotes(notes.map(note => note.id !== id ? note : updatedNote))\r\n        })\r\n        .catch(error => {\r\n          setNotificationMessage(`Couldn't toggle importance of note ${id}: ${error.message}`)\r\n          \r\n          setTimeout(() => {\r\n            setNotificationMessage(null)\r\n          }, 5000)\r\n          \r\n          setNotes(notes.filter(note => note.id !== id))\r\n        })\r\n    }\r\n\r\n    const handleNoteChange = (event) => {\r\n      // console.log(event.target.value)\r\n      setNewNote(event.target.value)\r\n    }\r\n\r\n    const notesToShow = showAll\r\n      ? notes\r\n      : notes.filter(note => note.important)\r\n  \r\n    return (\r\n      <div>\r\n        <h1>Notes</h1>\r\n        <Notification message={notificationMessage} />\r\n        <div>\r\n          <button onClick={() => setShowAll(!showAll)}>\r\n            show {showAll ? 'important' : 'all'} notes\r\n          </button>\r\n        </div>\r\n        <ul>\r\n          {notesToShow.map(note => \r\n            <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)}/>\r\n          )}\r\n        </ul>\r\n        <form onSubmit={addNote}>\r\n          <input \r\n            value={newNote} \r\n            onChange={handleNoteChange}\r\n            />\r\n          <button type=\"submit\">Save</button>\r\n        </form>\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n  \r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)\r\n\r\n\r\n\r\n"],"sourceRoot":""}